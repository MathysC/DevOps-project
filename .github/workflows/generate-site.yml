name: Deploy github pages # Name of the Workflow
run-name: Deploy Github Pages on ${{ github.event_name }} by ${{ github.triggering_actor }} # Name of the executed workflow

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["5-create-github-pages"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
env:
    ci_commit_author: github_actions
    ci_commit_message: "feat: Autogenerated Javadoc and Jacoco documentation"
    javadoc_origin: target/site/apidocs
    jacoco_origin: target/site/jacoco
    javadoc_folder: docs/javadoc 
    jacoco_folder: docs/jacoco 

jobs:
  documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3  
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build and Test with Maven
        run: mvn --batch-mode test

      - name: Generate Javadoc
        run: mvn javadoc:javadoc 

      - name: Generate Jacoco Coverage report
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-coverage-badge: false
          generate-summary: true     

      - name: Create folders and copy content
        run:  |
            rm -rf ${{ env.jacoco_folder }} ${{ env.javadoc_folder }} 
            mkdir ${{ env.jacoco_folder }} ${{ env.javadoc_folder }}
            cp -r ${{ env.jacoco_origin }}/* ${{ env.jacoco_folder }}
            cp -r ${{ env.javadoc_origin }}/* ${{ env.javadoc_folder }}

        # Add, commit and push the documentation on the branch
      - name: Commit and push the documentation
        uses: EndBug/add-and-commit@v9
        with:
          default_author: ${{ env.ci_commit_author }}
          message: '${{ env.ci_commit_message }}'
          add: 'docs/*'

  # Build job
  build:
    runs-on: ubuntu-latest

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    needs: documentation
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
