name: CI # Name of the workflow
run-name: Continuous Integration on ${{ github.event_name }} by ${{ github.triggering_actor }} # Name of the executed workflow

on:
    pull_request:
      branches:
        - dev

jobs:
    coverage:
        runs-on: ubuntu-latest
        
        env:
          ci_commit_author: github_actions
          ci_commit_message: Autogenerated JaCoCo coverage badge
          min_coverage: 80
          badge_path: .github/badges

        steps:
          # The checkout step downloads a copy of your repository on the runner.
          - name: Checkout
            uses: actions/checkout@v3 

          # The setup step needs minimum v2 or we will not be able to use temurin
          # The setup-java step configures the Eclipse Temurin (Java) 17 JDK by Eclipse Adoptium.
          # https://github.com/actions/setup-java
          # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven#caching-dependencies
          - name: Set up JDK 17
            uses: actions/setup-java@v3  
            with:
              java-version: '17'
              distribution: 'temurin'
              cache: maven

          - name: Build and Test with Maven
            run: mvn --batch-mode test
          
          # Generate the coverage and using the id:jacoco that is referring to the action outputs, weâ€™ll be able to get the coverage with {{ steps.jacoco.outputs.coverage }}
          - name: Generate Coverage and badge with Jacoco
            id: jacoco
            uses: cicirello/jacoco-badge-generator@v2
            with:
              badges-directory: ${{ env.badge_path }}
              fail-if-coverage-less-than: ${{ env.min_coverage }}
              generate-coverage-badge: false
              generate-summary: true
          
          # Add, commit and push the badge on the branch
          - name: Commit and push the badge (if it changed)
            uses: EndBug/add-and-commit@v9
            with:
              default_author: ${{ env.ci_commit_author }}
              message: '${{ env.ci_commit_message }}'
              add: '*.svg'

          # Create an artifact containing the jacoco report
          - name: Upload JaCoCo coverage report
            uses: actions/upload-artifact@v3
            with:
              name: jacoco-report
              path: target/site/jacoco/
          
          # If the job failed, stop all other jobs
          - name: Cancelling parallel jobs
            if: failure()
            uses: andymckay/cancel-action@0.3
            with:
              token: ${{ secrets.DEVOPS_TOKEN }}

    build:
      runs-on: ubuntu-latest
      needs: coverage
      steps:
      
      # The checkout step downloads a copy of your repository on the runner.
      - name: Checkout
        uses: actions/checkout@v3 

      - name: Set up JDK 17
        uses: actions/setup-java@v3  # Minimum v2 or we will not be able to use temurin
        with:
          java-version: '17'
          distribution: 'temurin'

          # Local Maven repository will be stored in a cache. 
          #   In future workflow runs, the cache will be restored so that dependencies don't need to 
          #   be downloaded from remote Maven repositories.
          cache: 'maven' 

          # The action tries to first resolve a version of Java from the local tool cache on the runner. 
          #   If unable to find a specific version in the cache, the action will download a version of Java. 
          check-latest: false 
          
      # Ensure that the code builds, tests pass, and a package can be created.
      # This command will download dependencies, build classes, run tests, and package 
      #   classes into their distributable format, for example, a JAR file.
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package

      # Copy the jar in a folder named `artifact` and upload it as an artifact
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven#packaging-workflow-data-as-artifacts 
      - name: Upload Jar as Artifact
        run: mkdir artifact && cp target/*.jar artifact
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: artifact
      
      # If the job failed, stop all other jobs
      - name: Cancelling parallel jobs
        if: failure()
        uses: andymckay/cancel-action@0.3
        with:
          token: ${{ secrets.DEVOPS_TOKEN }}
    deploy:
      runs-on: ubuntu-latest 
      needs: coverage
      
      permissions: 
        contents: read
        packages: write 

      steps:
        - name: Checkout
          uses: actions/checkout@v3         
          
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: Deploy Package
          run: mvn --batch-mode deploy
          env:
            GITHUB_TOKEN: ${{ secrets.DEVOPS_TOKEN }}

        # If the job failed, stop all other jobs
        - name: Cancelling parallel jobs
          if: failure()
          uses: andymckay/cancel-action@0.3
          with:
            token: ${{ secrets.DEVOPS_TOKEN }}
